clear all
format short;

MVA = 19*10^6;  % 피상전력
V = 10*10^3;  % 상전압
Phase = 3;  % 3상
Vb = V/sqrt(Phase);  % 선간 전압
Ib = MVA/(sqrt(Phase)*V) ;  % P = VI
Zb = Vb/Ib; % 임피던스 옴의공식 사용


% (a) 옴 및 pu로 불포화 및 포화 동기 리액턴스를 구하여라
Vunsat = 18000/sqrt(Phase);     % 단락회로 전압
Iunsat = 490;                   % 단락회로 전류
Zunsat = Vunsat/Iunsat;         % 단락회로 인피던스
Relc = 0.08;                     % 전기자 저항
Xunsat = sqrt(Zunsat^2 - Relc^2);
XunsatPu = Xunsat/Zb;  % 옴
Zsat = V/sqrt(Phase)/Iunsat; 
Xsat = sqrt(Zsat^2 - Relc^2);
XsatPu = Xsat/Zb;  % pu
fprintf("_______________________________________________________________________________\n")
fprintf('(a)의 답: 옴은 %.2f, pu는 %.2f이다.\n', XunsatPu, XsatPu)


% (b) 동기 발전기가 무한 모션에 연결되어 있고 지상 역률 0.8로 정격 MVA를 공급한다고 할 때 필요한 계자 전류를 구하여라
Vtseta = 0;
Vtreal = 1;
Vt = complex(Vtreal*cos(Vtseta),Vtreal*sin(Vtseta));  
PF = 0.8;
seta = acos(PF);
Iaseta = -seta;
Iareal = 1;
Ia = complex(Iareal*cos(Iaseta),Iareal*sin(Iaseta));
Zsseta = atan(Xsat/Relc);
Zsreal = XsatPu;
Zs = complex(Zsreal*cos(Zsseta),Zsreal*sin(Zsseta));
Ef = Vt+Ia*Zs;
EfrealPu = abs(Ef);
theta = angle(Ef);
Efdeg = rad2deg(theta);
Efreal = EfrealPu*V;
If = EfrealPu*200;
fprintf('(b)의 답: 계자전류는 %.2ff이다.\n', If)

% (c) (b)와 같이 동작하는 발전기를 계자 전류를 변화시키지 않은 채로 무한 모션에서 떼어낼 때 단자전압을 구하여라

IrA=[100,150,200,250,300,350];
KV=[9.0,12.0,14.0,15.3,15.9,16.4];




% x와 y 데이터를 사용하여 유사한 함수 구하기
% 예를 들어 다항식 적합을 사용할 수 있습니다.
degree = 3; % 다항식의 차수 설정
p = polyfit(IrA, KV, degree); % 다항식 적합 수행

% 적합된 함수로 x 범위 내에서 예측값 생성
x_pred = IrA(1):IrA(6);,0:max(KV); % 예측할 x 범위 설정
y_pred = polyval(p, x_pred); % 예측값 생성

% 원래 데이터와 적합된 함수를 그래프로 그리기

plot(IrA, KV, 'o', x_pred, y_pred, '-');
legend('원래 데이터', '적합된 함수');
xlabel('If 축');
ylabel('kV 축');
title('데이터 적합과 예측');

X0=0;
Y0=0;
hold on

slope = (KV(1) - Y0) / (IrA(1) - X0);

% y절편 (y-intercept) 계산
y_intercept = - slope * X0;

% 직선의 x 범위 설정 (예: -1부터 6까지)
x_range = 0:1:IrA(6);

% 직선 방정식 계산
y_line = slope * x_range + y_intercept;

% 그래프 그리기
plot(x_range, y_line, '--'); % 직선을 실선으로 그립니다.
